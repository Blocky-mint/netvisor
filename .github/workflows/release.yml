name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: netvisor-daemon-linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: netvisor-daemon-darwin-arm64
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: server
          key: ${{ matrix.target }}
      
      - name: Install OpenSSL (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config
      
      - name: Build daemon
        run: cargo build --release --bin daemon --target ${{ matrix.target }}
      
      - name: Prepare binary
        run: |
          cp target/${{ matrix.target }}/release/daemon ../${{ matrix.binary }}
          chmod +x ../${{ matrix.binary }}
      
      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.binary }}

  build-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build-binaries
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get release version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            mayanayza/netvisor-ui:${{ steps.version.outputs.version }}
            mayanayza/netvisor-ui:latest
            ghcr.io/${{ github.repository }}/ui:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/ui:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            mayanayza/netvisor-server:${{ steps.version.outputs.version }}
            mayanayza/netvisor-server:latest
            ghcr.io/${{ github.repository }}/server:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository }}/server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max